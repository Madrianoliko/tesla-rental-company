// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeslaRentalCompany.API.DbContexts;

#nullable disable

namespace TeslaRentalCompany.API.Migrations
{
    [DbContext(typeof(TeslaRentalCompanyContext))]
    [Migration("20230327203145_AppModelCompleted")]
    partial class AppModelCompleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarDealershipId")
                        .HasColumnType("int");

                    b.Property<int>("CostPerDay")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("datetime2");

                    b.Property<double>("DisperseHundreds")
                        .HasColumnType("float");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDealershipId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarDealershipId = 1,
                            CostPerDay = 100,
                            DateOfManufacture = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisperseHundreds = 2.1000000000000001,
                            HorsePower = 1020,
                            Model = "S",
                            Range = 600,
                            TopSpeed = 322
                        },
                        new
                        {
                            Id = 2,
                            CarDealershipId = 2,
                            CostPerDay = 110,
                            DateOfManufacture = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisperseHundreds = 2.1000000000000001,
                            HorsePower = 1020,
                            Model = "S",
                            Range = 600,
                            TopSpeed = 322
                        },
                        new
                        {
                            Id = 3,
                            CarDealershipId = 3,
                            CostPerDay = 80,
                            DateOfManufacture = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisperseHundreds = 3.2999999999999998,
                            HorsePower = 480,
                            Model = "3",
                            Range = 602,
                            TopSpeed = 255
                        },
                        new
                        {
                            Id = 4,
                            CarDealershipId = 4,
                            CostPerDay = 120,
                            DateOfManufacture = new DateTime(2022, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisperseHundreds = 3.3999999999999999,
                            HorsePower = 1020,
                            Model = "X",
                            Range = 543,
                            TopSpeed = 250
                        },
                        new
                        {
                            Id = 5,
                            CarDealershipId = 1,
                            CostPerDay = 90,
                            DateOfManufacture = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisperseHundreds = 5.0,
                            HorsePower = 400,
                            Model = "Y",
                            Range = 533,
                            TopSpeed = 217
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.CarDealership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarDealerships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Localization = "Palma Airport"
                        },
                        new
                        {
                            Id = 2,
                            Localization = "Palma City Center"
                        },
                        new
                        {
                            Id = 3,
                            Localization = "Alcudia"
                        },
                        new
                        {
                            Id = 4,
                            Localization = "Manacor"
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Cost = 0,
                            EndDate = new DateTime(2023, 5, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 5, 1, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            Cost = 0,
                            EndDate = new DateTime(2023, 3, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 3, 1, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CarId = 2,
                            Cost = 0,
                            EndDate = new DateTime(2023, 5, 30, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 5, 15, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CarId = 3,
                            Cost = 0,
                            EndDate = new DateTime(2023, 6, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 6, 1, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "Adminowski",
                            Password = "admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Marcin",
                            IsAdmin = false,
                            LastName = "Marcinowski",
                            Password = "user1",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jan",
                            IsAdmin = false,
                            LastName = "Janowski",
                            Password = "user2",
                            UserName = "user2"
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Car", b =>
                {
                    b.HasOne("TeslaRentalCompany.Data.Entities.CarDealership", "CarDealership")
                        .WithMany()
                        .HasForeignKey("CarDealershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDealership");
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Reservation", b =>
                {
                    b.HasOne("TeslaRentalCompany.Data.Entities.Car", "Car")
                        .WithMany("ListOfReservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaRentalCompany.Data.Entities.User", "User")
                        .WithMany("ListOfReservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Car", b =>
                {
                    b.Navigation("ListOfReservations");
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.User", b =>
                {
                    b.Navigation("ListOfReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
