// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeslaRentalCompany.API.DbContexts;

#nullable disable

namespace TeslaRentalCompany.API.Migrations
{
    [DbContext(typeof(TeslaRentalCompanyContext))]
    [Migration("20230325133636_dataSeed")]
    partial class dataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CostPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<DateTime>("YearOfManufacture")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPerDay = 300,
                            Model = "X",
                            Range = 400,
                            YearOfManufacture = new DateTime(2020, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CostPerDay = 150,
                            Model = "Y",
                            Range = 300,
                            YearOfManufacture = new DateTime(2019, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            EndDate = new DateTime(2023, 4, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 4, 1, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            EndDate = new DateTime(2023, 1, 10, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 1, 1, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 2,
                            EndDate = new DateTime(2023, 3, 21, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 3, 20, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            CarId = 2,
                            EndDate = new DateTime(2023, 3, 15, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            IsCanceled = false,
                            StartDate = new DateTime(2023, 3, 10, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 3
                        });
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Reservation", b =>
                {
                    b.HasOne("TeslaRentalCompany.Data.Entities.Car", "Car")
                        .WithMany("ListOfReservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("TeslaRentalCompany.Data.Entities.Car", b =>
                {
                    b.Navigation("ListOfReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
